stack:
  name: phone
  series: raring
  ppa: ubuntu-unity/daily-build-next
  dest: ubuntu-unity/next
  extracheck: ps-generic-autopilot-release-testing
  schedule: 0 7 * * 1-5
  dependencies:
    - qa
    - indicators
    - platform
    - hud
    - sdk
  test_parameters:
    packages: hud julius julius-voxforge libhud-client2 libhud-qt libhud-qt-qml libhud1 libpocketsphinx1 libqgsttools-p1 libqt5contacts5 libqt5dbus5 libqt5graphicaleffects5 libqt5gui5 libqt5multimedia5 libqt5network5 libqt5qml5 libqt5quick5 libqt5svg5 libqt5v8-5 libqt5versit5 libqt5widgets5 libqt5xml5 libqtglib-2.0-0 libsphinxbase1 libtelepathy-logger-qt5-0 libtelepathy-qt5-0 libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-randr0 libxcb-render-util0 libxcb-sync0 ofono pocketsphinx-hmm-en-hub4wsj pocketsphinx-lm-en-hub4 pocketsphinx-utils python-telepathy qtdeclarative5-qtquick2-plugin qtdeclarative5-ubuntu-ui-toolkit-plugin telepathy-ofono ubuntu-ui-toolkit-theme libqt5core5 phone-app
    testpackages: phone-app-autopilot
    tests: phone_app
  ci_default:
    configurations:
      raring-armhf:
        node_label: panda-pbuilder
        template: pbuilder-config.xml.tmpl
        archive_artifacts: '**/output/*deb, **/results/*test*.xml, **/results/coverage.xml'
      raring-amd64:
        node_label: pbuilder
        template: pbuilder-config.xml.tmpl
        archive_artifacts: '**/output/*deb, **/results/*test*.xml, **/results/coverage.xml'
      raring-i386:
        node_label: pbuilder
        template: pbuilder-config.xml.tmpl
        archive_artifacts: '**/output/*deb, **/results/*test*.xml, **/results/coverage.xml'
      generic-mediumtests:
        template: False
    autolanding:
      landing_job: phablet-land
    aggregate_tests: generic-mediumtests
    archive_artifacts: test_results.xml
    publish_coverage: '**/results/coverage.xml'
    publish_junit: '**/results/*test*.xml'
    parallel_jobs: 2
    contact_email: martin.mrazik@canonical.com
    use_description_for_commit: False
  projects:
    phone-app:
      test_suite: phone_app
      hooks: B09googletests B10gcovr_run H10enable_coverage D10install_lcov A10checklicenseheaders
