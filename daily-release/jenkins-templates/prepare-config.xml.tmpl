<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description>Master Prepare job for stack {{ stack }}/{{ release }}</description>
  <logRotator>
    <daysToKeep>15</daysToKeep>
    <numToKeep>-1</numToKeep>
    <artifactDaysToKeep>-1</artifactDaysToKeep>
    <artifactNumToKeep>-1</artifactNumToKeep>
  </logRotator>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <scm class="hudson.scm.NullSCM"/>
  <assignedNode>master</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers class="vector"/>
  <concurrentBuild>true</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/bash -eu
export LANG=en_US.UTF-8
export WORKSPACE="$PWD"

# Placeholder step
WRKDIR={{ BASEDIR }}/work/{{ release }}/{{ stack }}
BAKDIR=${WRKDIR}.bak

# jenkins doesn't pass empty variable to subjobs, set it if nothing present
ON_PACKAGES=${ON_PACKAGES-}

# detect if we do a new build (or a new check treated as a build)
if [ "$FORCE_PUBLICATION" != "true" -a "$AUTO_PUBLICATION" != "true" ]; then
  # swipe to a new ws if no partial rebuild or just check
  if [ -z &quot;$ON_PACKAGES&quot; -a "$CHECK_WITH_WHOLE_PPA" != "true" ]; then
    [ -d &quot;$BAKDIR&quot; ] &amp;&amp; rm -Rf $BAKDIR
    [ -d &quot;$WRKDIR&quot; ] &amp;&amp; mv $WRKDIR $BAKDIR
    # Fix umask when run as jenkins
    umask 0002
    mkdir -p $WRKDIR
  fi
  # retouch stack.started in case we created the new directory
  touch $WRKDIR/stack.started
  touch $WRKDIR/stack.building
  # remove the old started file (prepare if we want to restore the backup dir)
  rm -f $BAKDIR/stack.started
fi
cd $WRKDIR

</command>
    </hudson.tasks.Shell>
{% if projects %}    
    <hudson.plugins.parameterizedtrigger.TriggerBuilder>
      <configs>
        <hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
          <configs>
            <hudson.plugins.parameterizedtrigger.CurrentBuildParameters/>
          </configs>
          <projects>{{ projects }}</projects>
          <condition>ALWAYS</condition>
          <triggerWithNoParameters>false</triggerWithNoParameters>
          <block>
            <buildStepFailureThreshold>
              <name>FAILURE</name>
              <ordinal>2</ordinal>
              <color>RED</color>
            </buildStepFailureThreshold>
            <unstableThreshold>
              <name>UNSTABLE</name>
              <ordinal>1</ordinal>
              <color>YELLOW</color>
            </unstableThreshold>
            <failureThreshold>
              <name>FAILURE</name>
              <ordinal>2</ordinal>
              <color>RED</color>
            </failureThreshold>
          </block>
          <buildAllNodesWithLabel>false</buildAllNodesWithLabel>
        </hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
      </configs>
    </hudson.plugins.parameterizedtrigger.TriggerBuilder>
{% endif %}
  </builders>
  <publishers>
    <hudson.plugins.build__publisher.BuildPublisher>
      <publishUnstableBuilds>true</publishUnstableBuilds>
      <publishFailedBuilds>true</publishFailedBuilds>
      <postActions class="vector"/>
    </hudson.plugins.build__publisher.BuildPublisher>
  </publishers>
  <buildWrappers/>
</project>
