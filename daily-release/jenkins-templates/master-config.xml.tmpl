<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description>Master Job for stack {{ stack }}/{{ release }}</description>
  <logRotator>
    <daysToKeep>15</daysToKeep>
    <numToKeep>-1</numToKeep>
    <artifactDaysToKeep>-1</artifactDaysToKeep>
    <artifactNumToKeep>-1</artifactNumToKeep>
  </logRotator>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.BooleanParameterDefinition>
          <name>FORCE_PUBLICATION</name>
          <description>Force publication of all pending components for this stack</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>REBUILD_ONLY</name>
          <description>space separated list of project to rebuild</description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>CHECK_WITH_WHOLE_PPA</name>
          <description>don't rebuild the current stack, only rerun it with the whole ppa content for the check step</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>SKIP_PREPARE_CHECKS</name>
          <description>Skip prepare checks. This will then triggers FORCE_REBUILD as well and force an upload even if the latest changes even if dest is not in the Vcs (note that debian/changelog will probably relist commits that are already in dest) and even if the precondition FORCE_REBUILD trigger isn't met.</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>FORCE_REBUILD</name>
          <description>Force rebuilding above selected components (matching eventually REBUILD_ONLY), even if they have nothing to release. Note that if destination has a version that is not in the Vcs and that SKIP_DEST_CHECK is not enabled, this will still warn and block the rebuild.</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>AUTO_PUBLICATION</name>
          <description>This command is an internal property to retry publication once a stack a dependant stack is manually published. Do not use manually</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <assignedNode>master</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <authToken>Koh9xumayie3Eet8rooh4guniratae2b</authToken>
{% if schedule is defined %}
  <triggers class="vector">
    <hudson.triggers.TimerTrigger>
      <spec>{{ schedule }}</spec>
    </hudson.triggers.TimerTrigger>
  </triggers>
{% else %}  
  <triggers class="vector"/>
{% endif %}
  <concurrentBuild>true</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/bash -eu
export LANG=en_US.UTF-8
export WORKSPACE="$PWD"
WRKDIR={{ BASEDIR }}/work/{{ release }}/{{ stack }}

# to bootstrap a stack
umask 0002
mkdir -p $WRKDIR
cd $WRKDIR

REBUILD_ONLY=${REBUILD_ONLY-}

# detect if we do a new build (or a new check treated as a build)
if [ "$FORCE_PUBLICATION" != "true" -a "$AUTO_PUBLICATION" != "true" ]; then
  if [ -f "stack.started" ]; then
    # TODO: better would be a xml file + warning
    echo "only one instance of a stack can be queued for building"
    exit 1
  fi
  touch stack.started

else
  # check the stack is not running
  if [ -f "stack.building" ] || [ ! -f "stack.status" ]; then
    echo "current stack is currently building, can't even force the publication."
    # TODO: better would be a xml file + warning
    exit 1

  # enable to only trying automatically republish if the previous run didn't fail
  # but not if a manual "normal" publication is tried: AUTO_PUBLICATION and foo
  elif [ "$AUTO_PUBLICATION" = "true" -a "$REBUILD_ONLY" != "foo" ]; then
    if [ `cat stack.status` -eq 1 ]; then
      echo "ERROR: The previous run already failed, can't republish automatically the stack. Report to that run to get more info."
      echo "If you wanted to try/force a manual regular publication, you can use AUTO_PUBLICATION and set REBUILD_ONLY to foo to bypass this safeguard."
      exit 1
    fi
  fi
fi

# enable postrun as we didn't exit directly in head
echo NEEDPOSTRUN

</command>
    </hudson.tasks.Shell>
{% if dependencies is defined %}
    <hudson.plugins.parameterizedtrigger.TriggerBuilder>
      <configs>
        <hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
          <configs>
            <hudson.plugins.parameterizedtrigger.CurrentBuildParameters/>
          </configs>
          <projects>{{ jobwaitonstacks }}</projects>
          <condition>ALWAYS</condition>
          <triggerWithNoParameters>false</triggerWithNoParameters>
          <block>
            <buildStepFailureThreshold>
              <name>FAILURE</name>
              <ordinal>2</ordinal>
              <color>RED</color>
            </buildStepFailureThreshold>
            <unstableThreshold>
              <name>UNSTABLE</name>
              <ordinal>1</ordinal>
              <color>YELLOW</color>
            </unstableThreshold>
            <failureThreshold>
              <name>FAILURE</name>
              <ordinal>2</ordinal>
              <color>RED</color>
            </failureThreshold>
          </block>
          <buildAllNodesWithLabel>false</buildAllNodesWithLabel>
        </hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
      </configs>
    </hudson.plugins.parameterizedtrigger.TriggerBuilder>
{% endif %}
    <hudson.plugins.parameterizedtrigger.TriggerBuilder>
      <configs>
        <hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
          <configs>
            <hudson.plugins.parameterizedtrigger.CurrentBuildParameters/>
          </configs>
          <projects>{{ jobprepare }}</projects>
          <condition>ALWAYS</condition>
          <triggerWithNoParameters>false</triggerWithNoParameters>
          <block>
            <buildStepFailureThreshold>
              <name>FAILURE</name>
              <ordinal>2</ordinal>
              <color>RED</color>
            </buildStepFailureThreshold>
            <unstableThreshold>
              <name>UNSTABLE</name>
              <ordinal>1</ordinal>
              <color>YELLOW</color>
            </unstableThreshold>
            <failureThreshold>
              <name>FAILURE</name>
              <ordinal>2</ordinal>
              <color>RED</color>
            </failureThreshold>
          </block>
          <buildAllNodesWithLabel>false</buildAllNodesWithLabel>
        </hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
      </configs>
    </hudson.plugins.parameterizedtrigger.TriggerBuilder>
    <hudson.plugins.parameterizedtrigger.TriggerBuilder>
      <configs>
        <hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
          <configs>
            <hudson.plugins.parameterizedtrigger.CurrentBuildParameters/>
          </configs>
          <projects>{{ jobbuild }}</projects>
          <condition>ALWAYS</condition>
          <triggerWithNoParameters>false</triggerWithNoParameters>
          <block>
            <buildStepFailureThreshold>
              <name>FAILURE</name>
              <ordinal>2</ordinal>
              <color>RED</color>
            </buildStepFailureThreshold>
            <unstableThreshold>
              <name>UNSTABLE</name>
              <ordinal>1</ordinal>
              <color>YELLOW</color>
            </unstableThreshold>
            <failureThreshold>
              <name>FAILURE</name>
              <ordinal>2</ordinal>
              <color>RED</color>
            </failureThreshold>
          </block>
          <buildAllNodesWithLabel>false</buildAllNodesWithLabel>
        </hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
      </configs>
    </hudson.plugins.parameterizedtrigger.TriggerBuilder>
    <hudson.plugins.parameterizedtrigger.TriggerBuilder>
      <configs>
        <hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
          <configs>
            <hudson.plugins.parameterizedtrigger.CurrentBuildParameters/>
          </configs>
          <projects>{{ jobpublish }}</projects>
          <condition>ALWAYS</condition>
          <triggerWithNoParameters>false</triggerWithNoParameters>
          <block>
            <buildStepFailureThreshold>
              <name>FAILURE</name>
              <ordinal>2</ordinal>
              <color>RED</color>
            </buildStepFailureThreshold>
            <unstableThreshold>
              <name>UNSTABLE</name>
              <ordinal>1</ordinal>
              <color>YELLOW</color>
            </unstableThreshold>
            <failureThreshold>
              <name>FAILURE</name>
              <ordinal>2</ordinal>
              <color>RED</color>
            </failureThreshold>
          </block>
          <buildAllNodesWithLabel>false</buildAllNodesWithLabel>
        </hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
      </configs>
    </hudson.plugins.parameterizedtrigger.TriggerBuilder>
  </builders>
  <publishers>
    <hudson.plugins.postbuildtask.PostbuildTask>
      <tasks>
        <hudson.plugins.postbuildtask.TaskProperties>
          <logTexts>
            <hudson.plugins.postbuildtask.LogProperties>
              <logText>.*NEEDPOSTRUN.*</logText>
              <operator>AND</operator>
            </hudson.plugins.postbuildtask.LogProperties>
          </logTexts>
          <EscalateStatus>false</EscalateStatus>
          <RunIfJobSuccessful>false</RunIfJobSuccessful>
          <script>
#!/bin/bash -eu
export LANG=en_US.UTF-8
export WORKSPACE="$PWD"
WRKDIR={{ BASEDIR }}/work/{{ release }}/{{ stack }}
cd $WRKDIR

{{ BINDIR }}/stack_status -s {{ stack }} -r {{ release }}

# remove lock files if we are in a build case (as it's when we built them)
if [ "$FORCE_PUBLICATION" != "true" -a "$AUTO_PUBLICATION" != "true" ]; then
  rm -f stack.started
  rm -f stack.building
fi

# only publish automatically if no rebuild was involved (we are sure that way, no ABI breakage or manual checking at least)
# FIXME: what about: I rebuild with A, then manual publication (package change) and I force publication?
# we should track that a rebuild happened sooner than depending stacks and only launch that were rebuilt after that one
if [ "$CHECK_WITH_WHOLE_PPA" = "true" ] || [ "$FORCE_PUBLICATION" = "true" ] || [ "$AUTO_PUBLICATION" = "true" ]; then
  if [ `cat stack.status` -eq 0 ]; then
    {{ BINDIR }}/run_rdepends_publishable_stack
  fi
fi
          </script>
        </hudson.plugins.postbuildtask.TaskProperties>
      </tasks>
    </hudson.plugins.postbuildtask.PostbuildTask>
    <hudson.plugins.build__publisher.BuildPublisher>
      <publishUnstableBuilds>true</publishUnstableBuilds>
      <publishFailedBuilds>true</publishFailedBuilds>
      <postActions class="vector"/>
    </hudson.plugins.build__publisher.BuildPublisher>
  </publishers>
  <buildWrappers/>
</project>
